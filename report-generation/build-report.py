#!/usr/bin/env python3


import os
import sys
from subprocess import Popen, PIPE
from datetime import datetime
from pylatex import Document, Section, Subsection, Figure, Command, NewLine, SmallText, SubFigure, NewPage
from pylatex.utils import italic, NoEscape


users_all_30 = 'hs-users-all-30.png'
users_all_180 = 'hs-users-all-180.png'
users_active_180 = 'hs-users-active-180.png'
users_types = 'hs_user_types.png'
users_specified = 'hs_users_specified.png'
downloads_unknown = 'hs_downloads_unknown.png'
downloads_known = 'hs_downloads_known.png'
org_all = 'hs_all_organizations.png'
org_cuahsi = 'hs_us_int_cuahsi_organizations.png'
git_open_closed = 'opened-closed.png'
git_open = 'open.png'

def generate_figures(wrkdir):

    # collect data
    print('Collecting data')
    run(['collect_data.py', '-s'])

    print('Generating %s' % users_all_30)
    run(['users.py',
         '--working-dir=%s' % wrkdir,
         '--active-range=30',
         '--filename=%s' % users_all_30,
         '--figure-title=',
         '--step=10',
         '-tan'])

    print('Generating %s' % users_all_180)
    run(['users.py',
         '--working-dir=%s' % wrkdir,
         '--active-range=180',
         '--filename=%s' % users_all_180,
         '--figure-title=',
         '--step=10',
         '-tan'])

    print('Generating %s' % users_active_180)
    run(['users.py',
         '--working-dir=%s' % wrkdir,
         '--active-range=180',
         '--filename=%s' % users_active_180,
         '--figure-title=',
         '--step=10',
         '-anr'])

    print('Generating %s' % users_types)
    run(['users-pie.py',
         '--working-dir=%s' % wrkdir,
         '--filename=%s' % users_types,
         '--exclude=Other,Unspecified',
         '--figure-title=Distribution of User Types',
         '-p'])

    print('Generating %s' % users_specified)
    run(['users-pie.py',
         '--working-dir=%s' % wrkdir,
         '--filename=%s' % users_specified,
         '--figure-title=HydroShare User Type Specified',
         '-c'])

    print('Generating %s' % downloads_unknown)
    run(['activity-pie.py',
         '--working-dir=%s' % wrkdir,
         '--filename=%s' % downloads_unknown,
         '--figure-title=Overview of HydroShare Resource Downloads',
         '-u'])

    print('Generating %s' % downloads_known)
    run(['activity-pie.py',
         '--working-dir=%s' % wrkdir,
         '--filename=%s' % downloads_known,
         '--figure-title=HydroShare Resource Downloads for Known Users',
         '-k'])

    print('Generating %s' % org_all)
    run(['organizations.py',
         '--working-dir=%s' % wrkdir,
         '--agg=1D',
         '--filename=%s' % org_all,
         '--title=Total Cumulative Unique Organizations',
         '-a'])

    print('Generating %s' % org_cuahsi)
    run(['organizations.py',
         '--working-dir=%s' % wrkdir,
         '--agg=1D',
         '--filename=%s' % org_cuahsi,
         '--title=Cumulative Unique Organizations by Category',
         '-uic'])

    print('Generating %s' % git_open_closed)
    run(['git.py',
         '--working-dir=%s' % wrkdir,
         '--plot-type=bar',
         '--agg=3M',
         '--st=01-01-2014',
         '--filename=%s' % git_open_closed,
         '--figure-title=Summary of Opened and Closed Issues',
         '-co'])

    print('Generating %s' % git_open)
    run(['git.py',
         '--working-dir=%s' % wrkdir,
         '--plot-type=bar',
         '--agg=3M',
         '--st=01-01-2014',
         '--filename=%s' % git_open,
         '--figure-title=Summary of Closed Issues',
         '-o'])


def output_exists(cmd):
    fname = None
    for c in cmd:
        if '--filename' in c:
            fname = c.split('=')[-1]
            break
    if fname is not None:
        if os.path.exists(os.path.join(wrkdir, fname)):
            return True
    return False


def run(command):
    if output_exists(command):
        print('.. skipping bc output already exists')
        return

    cmd = [sys.executable] + command
    with Popen(cmd, stdout=PIPE, bufsize=1) as sp:
        for line in sp.stdout:
            txt = line.strip().decode('utf-8')
            if txt != '':
                print('.. ' + txt, flush=True)


def create_report(wrkdir, report_fn='hs-metrics-report'):

    # Create document and title
    geometry_options = {
        "head": "40pt",
        "margin": "0.5in",
        "bottom": "0.25in",
    }
    doc = Document(geometry_options=geometry_options)

    doc.preamble.append(NoEscape(r'\title{HydroShare Usage Metrics Report' +
                        r'\\ \normalsize Autogenerated report}'))
    doc.preamble.append(Command('date', NoEscape(r'\today')))
    doc.append(NoEscape(r'\maketitle'))

    # clean old report files
    report_tex = os.path.join(report_fn, 'tex')
    report_pdf = os.path.join(report_fn, 'pdf')
    if os.path.exists(report_tex):
        os.remove(report_tex)
    if os.path.exists(report_pdf):
        os.remove(report_pdf)

    with doc.create(Section('Users Statistics')):
        doc.append('This section contains figures and statistics about ' +
                   'HydroShare users, their activity, and their distribution '+
                   'among domains in the community. All information described '+
                   'in this section is derived from data recorded in the HS ' +
                   'ElasticSearch database which can be found at: ' +
                   'http://usagemetrics.hydroshare.org.')

        with doc.create(Subsection('User Activity')) as a:
            a.append("""The charts in this section capture the general usage and distribution of HydroShare users.""")
            with a.create(Figure(position='h!')) as fig:
                fig.add_image(users_all_30, width='300px')
                caption = """Total cumulative HydroShare accounts through time
                based on the date each account is created, (2) active accounts
                defined as users that have logged into HydroShare within the 
                last 30 days, and (3) new accounts defined as HydroShare
                accounts that were created within the active range (i.e.
                the portion of active users that created an account within the
                last 30 days).
                """
                fig.add_caption(caption.replace('\n', ''))
            with a.create(Figure(position='h!')) as fig:
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(users_all_180, width=NoEscape(r'\linewidth'))
                    caption = """(1) Total cumulative HydroShare accounts 
                    through time based on the date each account is created,
                    (2) active accounts defined as users that have logged into
                    HydroShare within the last 180 days, and (3) new accounts
                    defined as HydroShare accounts that were created within
                    the active range (i.e. the portion of active users that
                    created an account within the last 180 days)."""
                    fig.add_caption(caption.replace('\n', ''))
                fig.append(NoEscape(r'\hfill'))
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(users_active_180, width=NoEscape(r'\linewidth'))
                    caption = """(1) Active accounts defined as users that 
                    have logged into HydroShare within the last 180 days, (2)
                    new accounts defined as HydroShare accounts that were
                    created within the active range (i.e. the portion of
                    active users that created an account within the last
                    180 days), and (3) returning users defined as the
                    portion of active users that created their account
                    outside the active range"""
                    fig.add_caption(caption.replace('\n', ''))
            with a.create(Figure(position='h!')) as fig:
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(users_types, width=NoEscape(r'\linewidth'))
                    caption = """The distribution of HydroShare users based on
                    how each user defines specified their organizational type
                    from a controlled list of "user types." Users that have 
                    not completed this "user type" attribute of their profile
                    are not shown."""
                    fig.add_caption(caption.replace('\n', ''))
                fig.append(NoEscape(r'\hfill'))
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(users_specified,
                                 width=NoEscape(r'\linewidth'))
                    caption = """The distribution of HydroShare users that 
                    have defined a "user type" in their profile versus users 
                    that have not. As of <insert date> user type is a required
                    attribute when creating new accounts."""
                    fig.add_caption(caption.replace('\n', ''))
            with a.create(Figure(position='h!')) as fig:
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(downloads_unknown,
                                 width=NoEscape(r'\linewidth'))
                    sf.add_caption('')
                fig.append(NoEscape(r'\hfill'))
                with fig.create(SubFigure(position='b',
                                width=NoEscape(r'0.48\linewidth'))) as sf:
                    sf.add_image(downloads_known, width=NoEscape(r'\linewidth'))
                    sf.add_caption('')
            a.append(NewPage())

    with doc.create(Section('Organizational Statistics')) as o:
        o.append('<description>')
        with o.create(Figure(position='h!')) as fig:
            with fig.create(SubFigure(position='b',
                            width=NoEscape(r'0.48\linewidth'))) as sf:
                sf.add_image(org_all, width=NoEscape(r'\linewidth'))
                sf.add_caption('<caption>')
            fig.append(NoEscape(r'\hfill'))
            with fig.create(SubFigure(position='b',
                            width=NoEscape(r'0.48\linewidth'))) as sf:
                sf.add_image(org_cuahsi, width=NoEscape(r'\linewidth'))
                sf.add_caption('<caption>')
        o.append(NewPage())

    with doc.create(Section('Development Statistics')) as d:
        d.append('<description>')
        with d.create(Figure(position='h!')) as fig:
            with d.create(SubFigure(position='b',
                          width=NoEscape(r'0.48\linewidth'))) as sf:
                sf.add_image(git_open_closed, width=NoEscape(r'\linewidth'))
                sf.add_caption('<caption>')
            fig.append(NoEscape(r'\hfill'))
            with d.create(SubFigure(position='b',
                          width=NoEscape(r'0.48\linewidth'))) as sf:
                sf.add_image(git_open, width=NoEscape(r'\linewidth'))
                sf.add_caption('<caption>')
        d.append(NewPage())

    # create the report
    print('Generating LaTeX Document')
    doc.generate_pdf(os.path.join(wrkdir, report_fn), clean_tex=False)
    tex = doc.dumps()  # The document as string in LaTeX syntax


if __name__ == '__main__':

    wrkdir = datetime.strftime(datetime.today(), '%m.%d.%Y')
    generate_figures(wrkdir)
    create_report(wrkdir)
